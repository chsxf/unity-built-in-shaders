// Unity built-in shader source. Copyright (c) 2016 Unity Technologies. MIT license (see license.txt)

#pragma kernel YFlipTexture
#pragma kernel YFlipTextureRG USE_RG_TEXTURE
#pragma kernel YFlipTextureArray USE_TEXTURE_ARRAY
#pragma kernel YFlipTextureRGArray USE_TEXTURE_ARRAY USE_RG_TEXTURE
#pragma only_renderers d3d11 vulkan

#define FORMAT_R8_UINT    uint      // 1 component textures are R8_UINT maps (Vulkan Fragment Rate Shading & DX12 Pixel Shading Rate)
#define FORMAT_R8G8_UNORM float2    // 2 component textures are R8G8_UNORM maps (Vulkan Fragemnt Density Map)

#if defined(USE_TEXTURE_ARRAY)
#  define TYPE_UV uint3
#  if defined(USE_RG_TEXTURE)
#    define KERNEL_NAME     YFlipTextureRGArray
#    define TEXTURE_TYPE	Texture2DArray<FORMAT_R8G8_UNORM>
#    define RW_TEXTURE_TYPE	RWTexture2DArray<FORMAT_R8G8_UNORM>
#  else
#    define KERNEL_NAME     YFlipTextureArray
#    define TEXTURE_TYPE	Texture2DArray<FORMAT_R8_UINT>
#    define RW_TEXTURE_TYPE	RWTexture2DArray<FORMAT_R8_UINT>
#  endif
#else
#  define TYPE_UV uint2
#  if defined(USE_RG_TEXTURE)
#    define KERNEL_NAME     YFlipTextureRG
#    define TEXTURE_TYPE	Texture2D<FORMAT_R8G8_UNORM>
#    define RW_TEXTURE_TYPE	RWTexture2D<FORMAT_R8G8_UNORM>
#  else
#    define KERNEL_NAME     YFlipTexture
#    define TEXTURE_TYPE	Texture2D<FORMAT_R8_UINT>
#    define RW_TEXTURE_TYPE	RWTexture2D<FORMAT_R8_UINT>
#  endif
#endif

TEXTURE_TYPE    _Source;
RW_TEXTURE_TYPE _Destination;
int2            _ImageSize;

[numthreads(8,8,1)]
void KERNEL_NAME(TYPE_UV id : SV_DispatchThreadID)
{
    TYPE_UV idYFlip = id;
    idYFlip.y = (_ImageSize.y - 1) - idYFlip.y;
    _Destination[idYFlip] = _Source[id];
}
